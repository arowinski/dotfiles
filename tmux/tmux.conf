unbind C-b
set -g prefix C-s
bind -r C-s send-prefix

set -g default-command "zsh"
set-option -g focus-events on
set-option -sa terminal-overrides ',XXX:RGB'

bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"

bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"

setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '

bind-key  -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key  -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""
bind-key / copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

bind - split-window -v -c '#{pane_current_path}'
bind \\ split-window -h -c '#{pane_current_path}'

bind -n S-Left resize-pane -L 5
bind -n S-Right resize-pane -R 5
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5

set-option -gw xterm-keys on

bind -n C-S-Left resize-pane -L 2
bind -n C-S-Right resize-pane -R 2
bind -n C-S-Down resize-pane -D 1
bind -n C-S-Up resize-pane -U 1

bind-key l if-shell "$is_vim" "send-keys Space s v" "send-keys -R\; clear-history\; send-keys \"Enter\""
bind-key e run "tmux_workspace #{pane_current_path}"

set -g window-style 'bg=colour235'
set -g window-active-style 'bg=terminal'
set -g pane-border-style "fg=colour7"
set -g pane-active-border-style "fg=colour2"

bind c new-window -c '#{pane_current_path}'
bind b break-pane -d

bind C-b send-keys 'tat && exit' 'C-m'
bind k confirm kill-window
bind x confirm kill-pane
bind v confirm "respawn-pane -k"
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

set -g mouse on
set -g base-index 1
set -g renumber-windows on

set -g default-terminal "screen-256color"
set -g status-keys "emacs"
set -g history-limit 10000

set -g status-bg '#666666'
set -g status-fg '#aaaaaa'
set -g status-interval 1

set-option -sa terminal-overrides ',XXX:RGB'

# Left part of bottom bar
set -g window-status-current-format "#[fg=colour241]#[bg=colour4]#[fg=colour7]   #W   #[fg=colour241]"
set -g window-status-format "#[fg=colour249]#[bg=colour240] [#I]#[fg=colour252] #W "
set -g status-left '#[bg=colour7]#[fg=colour16]#{?client_prefix,#[bg=colour3],} #S #[bg=colour107]#[fg=colour7]#{?client_prefix,#[fg=colour3],}#{?window_zoomed_flag, üîç ,}'

set -g status-left-length 30
set -g status-right-length 100
set -g status-right "#(tmux_git_status)#[bg=colour16]#[fg=colour250]  #(date '+%b %d - %H:%M') "
bind j choose-tree
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

setw -g mode-keys vi

set-option -sg escape-time 0
