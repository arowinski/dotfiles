" ALE - Asynchronous linting engine

Plug 'w0rp/ale'

let g:ale_linters = {
 \ 'javascript': ['eslint', 'prettier'],
 \ 'ruby': ['rubocop', 'standardrb']
 \ }

nmap <silent> [l <Plug>(ale_previous_wrap)
nmap <silent> ]l <Plug>(ale_next_wrap)

let g:ale_fixers = {
\ '*': ['remove_trailing_lines', 'trim_whitespace'],
\ 'javascript': ['eslint', 'prettier'],
\ 'ruby': ['rubocop', 'standardrb'],
\}

let g:ale_enabled = 1
let g:ale_fix_on_save = 1

let g:ale_sign_error = '>'
let g:ale_sign_warning = '-'

let g:ale_set_highlights = 1

set updatetime=1000

autocmd CursorHold * call ale#Queue(0)
autocmd CursorHoldI * call ale#Queue(0)
autocmd InsertLeave * call ale#Queue(0)
autocmd TextChanged * call ale#Queue(0)

let g:ale_lint_on_text_changed = 0

command AleFixToggle :call AleFixToggle()
map <silent> <F8> :AleFixToggle<cr>

function! AleFixToggle()
  if g:ale_fix_on_save
    let g:ale_fix_on_save = 0
    :echo 'Ale Fixing on save disabled'
  else
    let g:ale_fix_on_save = 1
    :echo 'Ale Fixing on save enabled'
  endif
endfunction

" vim:ft=vim
